[package]
name = "website"
version = "0.1.0"
authors = ["Liam Curry <liam@sagan.software>"]
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
cfg-if = "0.1.2"
wasm-bindgen = "0.2"
wasm-bindgen-futures = "0.2"
js-sys = "0.3"
futures = "0.1.20"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.1", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.2", optional = true }
contract = { path = "../contract", default-features = false, features = ["web"] }
eosio = { path = "../../../rust-eos/crates/eosio", features = ["serde", "js-sys"] }
eosio_rpc = { path = "../../../rust-eos/crates/eosio_rpc" }

[dependencies.web-sys]
version = "0.3"
features = [
  'Document',
  'Element',
  'HtmlElement',
  'Node',
  'Window',
  'Location',
  'DomTokenList',
  'Event',
  'EventTarget',
  'console'
]

[dev-dependencies]
wasm-bindgen-test = "0.2"
